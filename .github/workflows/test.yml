name: Test

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10']

    env:
      PYTHONPATH: '/home/runner/work/HAL/HAL/actorkeys/python'
      OBSERVATORY: 'APO'

    steps:
      - uses: actions/checkout@v2

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Clone actorkeys
        uses: actions/checkout@master
        with:
          repository: sdss/actorkeys
          ref: sdss5
          path: actorkeys

      - name: Setup node.js (for pyright)
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install dependencies
        run: |
          pip install --upgrade wheel pip setuptools
          pip install .

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pip install flake8
          flake8 src/hal --count --show-source --statistics

      - name: Lint with black
        run: |
          pip install black
          black --check src/hal

      - name: Lint with isort
        run: |
          pip install isort
          isort -c src/hal

      - name: Run type checking
        continue-on-error: true
        run: |
          npm install -g pyright
          pyright

      - name: Test with pytest
        run: |
          pip install pytest pytest-mock pytest-asyncio pytest-cov
          pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
