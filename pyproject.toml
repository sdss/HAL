[project]
name = "sdss-hal"
version = "1.4.0"
description = "High-level observing tool for SDSS-V (replaces SOP)"
authors = [ { name = "José Sánchez-Gallego", email = "gallegoj@uw.edu" } ]
license = "BSD-3-Clause"
readme = "README.md"

requires-python = ">=3.10,<4"

dependencies = [
    "sdsstools>=1.0.0",
    "sdss-clu>=2.2.7",
    "click-default-group>=1.2.2",
    "numpy>=1.22.1",
    "sdssdb>=0.8.3",
    "peewee>=3.17.0",
    "typing-extensions>=4.11.0",
    "six>=1.17.0",
]

[project.urls]
Homepage = "https://github.com/sdss/hal"
Repository = "https://github.com/sdss/hal"
Documentation = "https://sdss-hal.readthedocs.org"

[project.scripts]
hal = "hal.__main__:hal"

[dependency-groups]
dev = [
    "ipython>=8.0.0",
    "pytest>=5.2.2",
    "pytest-asyncio>=0.23.4",
    "pytest-cov>=2.8.1",
    "pytest-mock>=1.13.0",
    "pytest-sugar>=0.9.2",
    "coverage[toml]>=5.0",
    "ipdb>=0.12.3",
    "rstcheck>=3.3.1",
    "Sphinx>=4.0.0",
    "furo>=2021.9.22",
    "sphinx-copybutton>=0.4.0",
    "sphinx-click>=3.0.1",
    "sphinx-jsonschema>=1.16.11",
    "myst-parser>=0.15.2",
    "nox>=2021.6.12",
    "sphinx-autobuild>=2021.3.14",
    "ruff>=0.0.291"
]

[tool.ruff]
line-length = 88
target-version = 'py313'
exclude = ["typings/"]

[ruff.lint]
select = ["E", "F", "I"]
unfixable = ["F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]

[tool.ruff.lint.isort]
known-first-party = ["hal"]
lines-after-imports = 2
section-order = ["future", "standard-library", "typing", "third-party", "sdss", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
typing = ["typing"]
sdss = ["sdsstools", "clu"]

[tool.pytest.ini_options]
addopts = "--cov hal --cov-report xml --cov-report html --cov-report term -W ignore"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
include = ["src/hal/*"]
omit = [
    "src/hal/__init__.py",
    "src/hal/__main__.py",
    "src/hal/exceptions.py",
    "src/hal/macros/test_macro.py",
    "src/hal/actor/commands/test.py"
]

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "# pragma: no cover"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["src/hal"]

[tool.hatch.build.targets.wheel]
packages = ["src/hal"]
